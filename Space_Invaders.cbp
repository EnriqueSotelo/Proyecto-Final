#include <allegro.h>
#include "inicia.h"
#include "disparos.h"

#define ANCHO 600
#define ALTO  375


struct NAVE{
    int x,y;
    int n_disp;
    int max_disp;
    int tick;
    int ancho_b;
    int alto_b;
    int ancho_p;
    int alto_p;
    int dir_bala;

    BITMAP* img_nav;
    BITMAP* img_bala;

    void inicia(char* ruta_nave, char* ruta_bala, int _ancho_b, int _alto_b,
                int _ancho_p, int _alto_p, int _x, int _y, int _dir_bala);
    void pinta(BITMAP* buffer);
    void mueve();
    bool temporizador();
    void dispara(struct Balas disparos[], BITMAP* buffer);
};

void NAVE::inicia(char* ruta_nave, char* ruta_bala, int _ancho_b, int _alto_b,
                  int _ancho_p, int _alto_p, int _x, int _y, int _dir_bala){
    x = _x; y = _y;
    n_disp = 0; max_disp = 5;
    img_nav = load_bitmap(ruta_nave,NULL);
    img_bala = load_bitmap(ruta_bala,NULL);
    tick = 0;
    ancho_b = _ancho_b;
    alto_b = _alto_b;
    alto_p = _alto_p;
    ancho_p = _ancho_p;
    dir_bala = _dir_bala;
}

bool NAVE::temporizador(){
    tick++;
    if (tick == 5){
        tick = 0;
        return true;
    }
    return false;

}

void NAVE::pinta(BITMAP* buffer){
    masked_blit(img_nav,buffer,0,0,x,y,ancho_p,alto_p);

}

void NAVE::mueve(){
    if (key[KEY_LEFT]) x -=5;
    if (key[KEY_RIGHT]) x +=5;

}

void NAVE::dispara(struct Balas disparos[], BITMAP* buffer){
        if(key[KEY_SPACE] && temporizador())
        crear_bala(n_disp, max_disp, disparos, x, y,dir_bala);
        pintar_bala(n_disp, max_disp, disparos, buffer, img_bala, ancho_b, alto_b);
        elimina_bala(n_disp, max_disp, disparos, ANCHO, ALTO);

}

void 

int main(){

    inicia_allegro(ANCHO,ALTO);
	inicia_audio(70,70);

    BITMAP *buffer = create_bitmap(ANCHO, ALTO);

    NAVE N;
    N.inicia("Recursos/nave.bmp","Recursos/Bala2.bmp",6,12,30,20, ANCHO/2, ALTO-50, -8);

    NAVE E[60];
    E.inicia("Recursos/enemigos.bmp", "Recursos/Bala_Enem.bmp", 6, 12, 25, 20, 50, 80, 8);
    Balas disparos[N.max_disp];
    Balas disp_E[E.max_disp];

    while(!key[KEY_ESC]){

        clear_to_color (buffer,0x000000);
        N.pinta(buffer);
        N.mueve();
        N.dispara(disparos, buffer);

        E.pinta(buffer);
        E.dispara(disp_E, buffer);

        blit(buffer, screen ,0,0,0,0,ANCHO,ALTO);
        rest(20);

    }




	return 0;
}
END_OF_MAIN();

